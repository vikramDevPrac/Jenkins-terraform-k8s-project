pipeline {
    agent any
    environment {      
        AWS_DEFAULT_REGION = 'us-east-1'
    }
    stages{
        stage('Checkout SCM'){
            steps{
                script{
                    checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/Sacbank/EKS-Terraform-Jenkins.git']])
                }
            }
        }
        stage('Initializing Terraform'){
            steps{
                script{
                    dir('terraform'){
                         sh 'terraform init'
                    }
                }
            }
        }
        stage('Validating Terraform'){
            steps{
                script{
                    dir('terraform'){
                         sh 'terraform validate'
                    }
                }
            }
        }
        stage('Previewing the infrastructure'){
            steps{
                script{
                    dir('terraform'){
                         sh 'terraform plan'
                    }
                }
            }
        }
        stage('Create/Destroy an EKS cluster'){
            steps{
                script{
                    dir('terraform'){
                         sh 'terraform $action --auto-approve'
                    }
                }
            }
        }
        stage('Update Kubeconfig') {
            steps {
                script {
                    sh 'aws eks update-kubeconfig --name My-Demo-Eks-Cluster'
                }
            }
        }
        
        stage('Apply Service Account') {
            steps {
                script {
                    dir('manifest'){
                         sh 'kubectl apply -f service_account.yml'
                    }                    
                }
            }
        }
        
        stage('Add Helm Repo') {
            steps {
                script {
					sh 'helm repo add eks https://aws.github.io/eks-charts'
                }
            }
        }
        
        stage('Install AWS Load Balancer Controller') {
            steps {
                script {
					sh 'helm install aws-load-balancer-controller eks/aws-load-balancer-controller -n kube-system --set clusterName=My-Demo-Eks-Cluster --set serviceAccount.create=false --set serviceAccount.name=aws-load-balancer-controller'
                }
            }
        }       
        
        stage('Deploy Nginx App') {
            steps {
                script {
                    dir('manifest'){
                         sh 'kubectl apply -f nginx-app-deployment.yml'
                         sleep(time:60, unit: "SECONDS")
                         sh 'kubectl apply -f nginx-app-service.yaml'
                         sleep(time:60, unit: "SECONDS")
                         sh 'kubectl apply -f nginx-app-ingress-alb.yaml'
                    } 
                }
            }
        }
    }
}
